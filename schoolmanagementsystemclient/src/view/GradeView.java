/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Model.Course;
import Model.Grade;
import Model.Student;
import java.awt.print.PrinterException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import service.CourseService;
import service.GradeService;
import service.StudentServices;

/**
 *
 * @author LOGAN
 */
public class GradeView extends javax.swing.JFrame {

    /**
     * Creates new form Gradeview
     */
    public GradeView() {
        initComponents();
        retriveAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchtxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        teacherBtn = new javax.swing.JButton();
        studentBtn = new javax.swing.JButton();
        courseBtn = new javax.swing.JButton();
        GradesBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        allGrades = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        studentId = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        courseId = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        gradetxt = new javax.swing.JComboBox<>();
        save = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        studentId1 = new javax.swing.JTextField();
        searchTxt2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchtxt.setFont(new java.awt.Font("Bell MT", 0, 11)); // NOI18N
        searchtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchtxtActionPerformed(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        searchBtn.setText("search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        teacherBtn.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        teacherBtn.setText("Teacher");
        teacherBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherBtnActionPerformed(evt);
            }
        });

        studentBtn.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        studentBtn.setText("Student");
        studentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentBtnActionPerformed(evt);
            }
        });

        courseBtn.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        courseBtn.setText("Courses");
        courseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseBtnActionPerformed(evt);
            }
        });

        GradesBtn.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        GradesBtn.setText("Grades");
        GradesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GradesBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("School Management system");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(teacherBtn)
                .addGap(18, 18, 18)
                .addComponent(studentBtn)
                .addGap(25, 25, 25)
                .addComponent(courseBtn)
                .addGap(18, 18, 18)
                .addComponent(GradesBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(190, 190, 190))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teacherBtn)
                    .addComponent(studentBtn)
                    .addComponent(courseBtn)
                    .addComponent(GradesBtn))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        allGrades.setFont(new java.awt.Font("Bell MT", 0, 11)); // NOI18N
        allGrades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "stId", "Student", "Course", "csId", "Grade", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allGrades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allGradesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(allGrades);

        jLabel2.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        jLabel2.setText("Add Grades");

        jLabel3.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel3.setText("Student");

        studentId.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icons/icons8-search-24.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        courseId.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icons/icons8-search-24.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel6.setText("Course");

        jLabel5.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel5.setText("Grade");

        gradetxt.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        gradetxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select --", "A", "B", "C", "D", "E", "F" }));

        save.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel4.setText("Student");

        studentId1.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N

        searchTxt2.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel7.setText("Course");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/icons8-print-24.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(save)
                                        .addGap(31, 31, 31)
                                        .addComponent(delete)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(courseId, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton2))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(studentId, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton1))
                                            .addComponent(gradetxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(studentId1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(searchTxt2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(315, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(15, 15, 15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 347, Short.MAX_VALUE)
                        .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBtn))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(studentId, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1)))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(studentId1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(courseId, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2))
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(searchTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(gradetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(save)
                            .addComponent(delete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void retriveAll() {
        try {
            DefaultTableModel tbModel = (DefaultTableModel) allGrades.getModel();

            Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
            GradeService service = (GradeService) theReg.lookup("grade");
            List<Grade> grades = service.allGrade();
            tbModel.setNumRows(0);
            for (Grade gr : grades) {
                Integer id = gr.getId();
                Integer stId = gr.getTheStudent().getStudentId();
                String stName = gr.getTheStudent().getNames();
                Integer csId = gr.getTheCourse().getId();
                String csName = gr.getTheCourse().getName();
                String grade = gr.getGrade();
                String date = gr.getDate();

                tbModel.addRow(new Object[]{
                    id, stId, stName, csId, csName, grade, date
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void searchtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchtxtActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        if (searchtxt.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Search can't be Empty");
        } else {
            try {
                DefaultTableModel tbModel = (DefaultTableModel) allGrades.getModel();

                Grade gd = new Grade();
                gd.setId(Integer.parseInt(searchtxt.getText()));

                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                GradeService service = (GradeService) theReg.lookup("grade");
                Grade gradeObj = service.creatGrade(gd);

                if (gradeObj != null) {
                    tbModel.setRowCount(0);

                    Integer id = gradeObj.getId();
                    Integer stId = gradeObj.getTheStudent().getStudentId();
                    String stName = gradeObj.getTheStudent().getNames();
                    Integer csId = gradeObj.getTheCourse().getId();
                    String csName = gradeObj.getTheCourse().getName();
                    String grade = gradeObj.getGrade();
                    String date = gradeObj.getDate();

                    tbModel.addRow(new Object[]{
                        id, stId, stName, csId, csName, grade, date
                    });
                } else {
                    JOptionPane.showMessageDialog(this, "No Results");
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }

        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void teacherBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherBtnActionPerformed
        TeacherView teacher = new TeacherView();
        teacher.show();

        dispose();
    }//GEN-LAST:event_teacherBtnActionPerformed

    private void studentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentBtnActionPerformed
        StudentView student = new StudentView();
        student.show();

        dispose();
    }//GEN-LAST:event_studentBtnActionPerformed

    private void courseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseBtnActionPerformed
        CourseView course = new CourseView();
        course.show();

        dispose();
    }//GEN-LAST:event_courseBtnActionPerformed

    private void GradesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GradesBtnActionPerformed
        GradeView grade = new GradeView();
        grade.show();

        dispose();
    }//GEN-LAST:event_GradesBtnActionPerformed

    private void allGradesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allGradesMouseClicked
        int rowSelected = allGrades.getSelectedRow();
        DefaultTableModel tbModel = (DefaultTableModel) allGrades.getModel();
        studentId.setText(tbModel.getValueAt(rowSelected, 1).toString());
        studentId1.setText(tbModel.getValueAt(rowSelected, 2).toString());
        courseId.setText(tbModel.getValueAt(rowSelected, 3).toString());
        searchTxt2.setText(tbModel.getValueAt(rowSelected, 4).toString());
        gradetxt.setSelectedItem(tbModel.getValueAt(rowSelected, 5).toString());
    }//GEN-LAST:event_allGradesMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (studentId.getText().trim().isEmpty() || !studentId.getText().matches("^[0-9]*$")) {
            JOptionPane.showMessageDialog(this, "Search not valid\nOnly Search Ids");
        } else {
            Student stud = new Student();
            int theId = Integer.parseInt(studentId.getText());
            stud.setStudentId(theId);
            try {
                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                StudentServices service = (StudentServices) theReg.lookup("student");
                Student StudentObj = service.searchStudent(stud);

                if (StudentObj != null) {
                    Integer id = StudentObj.getStudentId();
                    String names = StudentObj.getNames();
                    String email = StudentObj.getEmail();
                    String phone = StudentObj.getPhone();
                    String faculty = StudentObj.getFaculty();
                    String gender = StudentObj.getGender();
                    String startingYear = StudentObj.getStartingYear();

                    studentId.enable(false);
                    studentId.setText(id.toString());
                    studentId1.setText(names);
                    studentId1.enable(false);

                } else {
                    JOptionPane.showMessageDialog(this, "No Results");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (courseId.getText().trim().isEmpty() || !courseId.getText().matches("^[0-9]*$")) {
            JOptionPane.showMessageDialog(this, "Search not valid\nOnly Search Ids");
        } else {
            Course newCourse = new Course();
            int theId = Integer.parseInt(courseId.getText());
            newCourse.setId(theId);
            try {
                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                CourseService service = (CourseService) theReg.lookup("course");
                Course course = service.searchCourse(newCourse);

                if (course != null) {

                    Integer id = course.getId();
                    String code = course.getCode();
                    String name = course.getName();
                    String credits = course.getCredit();
                    String teacher = course.getTheTeacher().getNames();

                    courseId.enable(false);
                    searchTxt2.setText(name);
                    searchTxt2.enable(false);

                } else {
                    JOptionPane.showMessageDialog(this, "No Results");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if (courseId.getText().trim().isEmpty() || studentId.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Do the searches");
        } else if (gradetxt.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Select Grade");
        } else {
            try {
                Grade grade = new Grade();

                if (allGrades.getSelectedRow() != -1) {
                    int selectedRow = allGrades.getSelectedRow();
                    DefaultTableModel tbModel = (DefaultTableModel) allGrades.getModel();
                    grade.setId(Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString()));
                }
                Student st = new Student();
                st.setStudentId(Integer.parseInt(studentId.getText()));
                grade.setTheStudent(st);

                Course cs = new Course();
                cs.setId(Integer.parseInt(courseId.getText()));
                grade.setTheCourse(cs);

                Date today = new Date();
                grade.setDate(today.toString());

                grade.setGrade(gradetxt.getSelectedItem().toString());

                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                GradeService service = (GradeService) theReg.lookup("grade");
                Grade gradeObj = service.creatGrade(grade);

                if (gradeObj != null) {
                    JOptionPane.showMessageDialog(this, "Data saved");
                    studentId.setText("");
                    studentId.enable(true);
                    courseId.setText("");
                    courseId.enable(true);
                    gradetxt.setSelectedIndex(0);
                    retriveAll();
                } else {
                    JOptionPane.showMessageDialog(this, "Something wrong");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if (allGrades.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Select a row To delete");
        } else {
            int choice = JOptionPane.showConfirmDialog(this, "Are you sure to delete");
            if (choice == JOptionPane.YES_OPTION) {
                int selectedRow = allGrades.getSelectedRow();
                DefaultTableModel tbModel = (DefaultTableModel) allGrades.getModel();
                Grade grade = new Grade();
                grade.setId(Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString()));
                try {
                    Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                    GradeService service = (GradeService) theReg.lookup("grade");
                    Grade gradeObj = service.deleteGrade(grade);

                    if (gradeObj != null) {
                        JOptionPane.showMessageDialog(this, "Data saved");
                        studentId.setText("");
                        studentId.enable(true);
                        courseId.setText("");
                        courseId.enable(true);
                        gradetxt.setSelectedIndex(0);
                        retriveAll();
                    } else {
                        JOptionPane.showMessageDialog(this, "Something wrong");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            allGrades.print();
        } catch (PrinterException ex) {
            Logger.getLogger(StudentView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GradeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GradeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GradeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GradeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GradeView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GradesBtn;
    private javax.swing.JTable allGrades;
    private javax.swing.JButton courseBtn;
    private javax.swing.JTextField courseId;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> gradetxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton save;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTxt2;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JButton studentBtn;
    private javax.swing.JTextField studentId;
    private javax.swing.JTextField studentId1;
    private javax.swing.JButton teacherBtn;
    // End of variables declaration//GEN-END:variables
}
