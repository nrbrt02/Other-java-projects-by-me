/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Model.Course;
import Model.Teacher;
import java.awt.print.PrinterException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import service.CourseService;
import service.TeacherService;

/**
 *
 * @author LOGAN
 */
public class CourseView extends javax.swing.JFrame {

    /**
     * Creates new form Courseview
     */
    public CourseView() {
        initComponents();
        fillTeacher();
        allCourseRetrived();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        teacherBtn1 = new javax.swing.JButton();
        studentBtn1 = new javax.swing.JButton();
        courseBtn1 = new javax.swing.JButton();
        GradesBtn1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        names = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        code = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        credit = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        teachert = new javax.swing.JComboBox<>();
        delete = new javax.swing.JButton();
        save = new javax.swing.JButton();
        searchTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        allCoursesT = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        teacherBtn1.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        teacherBtn1.setText("Teacher");
        teacherBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherBtn1ActionPerformed(evt);
            }
        });

        studentBtn1.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        studentBtn1.setText("Student");
        studentBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentBtn1ActionPerformed(evt);
            }
        });

        courseBtn1.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        courseBtn1.setText("Courses");
        courseBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseBtn1ActionPerformed(evt);
            }
        });

        GradesBtn1.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        GradesBtn1.setText("Grades");
        GradesBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GradesBtn1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("School Management system");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(teacherBtn1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(studentBtn1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(courseBtn1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GradesBtn1))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(jLabel9)))
                .addContainerGap(267, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teacherBtn1)
                    .addComponent(studentBtn1)
                    .addComponent(courseBtn1)
                    .addComponent(GradesBtn1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, -1));

        names.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        names.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namesActionPerformed(evt);
            }
        });
        jPanel4.add(names, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 176, 29));

        jLabel7.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        jLabel7.setText("Add  Course");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jLabel10.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel10.setText("Code");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        code.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeActionPerformed(evt);
            }
        });
        jPanel4.add(code, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 176, 29));

        jLabel11.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel11.setText("Credit");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        credit.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        credit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditActionPerformed(evt);
            }
        });
        jPanel4.add(credit, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 176, 29));

        jLabel12.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel12.setText("Teacher");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        teachert.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        teachert.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--" }));
        jPanel4.add(teachert, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 176, 30));

        delete.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel4.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 440, -1, -1));

        save.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel4.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, -1));

        searchTxt.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jPanel4.add(searchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 110, 154, 33));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icons/icons8-search-24.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 110, -1, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icons/icons8-search-24.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 110, -1, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/icons8-print-24.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 510, -1, -1));

        jLabel15.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel15.setText("Names:");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));
        jPanel4.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 290, -1));

        allCoursesT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Names", "Code", "Credit", "Teacher", "Tech_id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allCoursesT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allCoursesTMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(allCoursesT);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 147, 690, 420));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1042, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void fillTeacher() {
        try {
            Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
            TeacherService service = (TeacherService) theReg.lookup("teacher");
            List<Teacher> allTeachers = service.allTeacher();

            for (Teacher teacher : allTeachers) {
                teachert.addItem(teacher.getTeacherId().toString());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void allCourseRetrived() {
        try {
            Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
            CourseService service = (CourseService) theReg.lookup("course");
            List<Course> allCourses = service.allCourses();

            DefaultTableModel tbModel = (DefaultTableModel) allCoursesT.getModel();
            tbModel.setRowCount(0);
            for (Course course : allCourses) {
                Integer id = course.getId();
                String code = course.getCode();
                String name = course.getName();
                String credits = course.getCredit();
                String teacher = course.getTheTeacher().getNames();
                Integer teacherId = course.getTheTeacher().getTeacherId();
                tbModel.addRow(new Object[]{
                    id, code, name, credits, teacher, teacherId
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void teacherBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherBtn1ActionPerformed
        TeacherView teacher = new TeacherView();
        teacher.show();

        dispose();
    }//GEN-LAST:event_teacherBtn1ActionPerformed

    private void studentBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentBtn1ActionPerformed
        StudentView student = new StudentView();
        student.show();

        dispose();
    }//GEN-LAST:event_studentBtn1ActionPerformed

    private void courseBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseBtn1ActionPerformed
        CourseView course = new CourseView();
        course.show();

        dispose();
    }//GEN-LAST:event_courseBtn1ActionPerformed

    private void GradesBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GradesBtn1ActionPerformed
        GradeView grade = new GradeView();
        grade.show();

        dispose();
    }//GEN-LAST:event_GradesBtn1ActionPerformed

    private void namesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namesActionPerformed

    private void codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeActionPerformed

    private void creditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if (allCoursesT.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Select a row To delete");
        } else {
            int choice = JOptionPane.showConfirmDialog(this, "Are you sure to delete");
            if (choice == JOptionPane.YES_OPTION) {
                int selectedRow = allCoursesT.getSelectedRow();
                DefaultTableModel tbModel = (DefaultTableModel) allCoursesT.getModel();
                Course course = new Course();
                course.setId(Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString()));
                try {
                    Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                    CourseService service = (CourseService) theReg.lookup("course");
                    Course course1 = service.deleteCourse(course);

                    if (course1 != null) {
                        JOptionPane.showMessageDialog(this, "Data saved");
                        names.setText("");
                        code.setText("");
                        credit.setText("");
                        teachert.setSelectedIndex(0);
                        allCourseRetrived();
                    } else {
                        JOptionPane.showMessageDialog(this, "Something wrong");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if (names.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Name can't be Empty");
        } else if (code.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Code can't Be Empty");
        } else if (credit.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "No 0 Credits");
        } else if (teachert.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Select Teacher");
        } else {
            try {
                Course newCourse = new Course();
                newCourse.setName(names.getText());
                newCourse.setCode(code.getText());
                newCourse.setCredit(credit.getText().toString());

                if (allCoursesT.getSelectedRow() != -1) {
                    int selectedRow = allCoursesT.getSelectedRow();
                    DefaultTableModel tbModel = (DefaultTableModel) allCoursesT.getModel();
                    newCourse.setId(Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString()));
                }

                Teacher tech = new Teacher();
                tech.setTeacherId(Integer.parseInt(teachert.getSelectedItem().toString()));
                newCourse.setTheTeacher(tech);

                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                CourseService service = (CourseService) theReg.lookup("course");
                Course allCourses = service.creatCourse(newCourse);

                if (allCourses != null) {
                    JOptionPane.showMessageDialog(this, "Course Added");
                    names.setText("");
                    code.setText("");
                    teachert.setSelectedIndex(0);
                    credit.setText("");
                    allCourseRetrived();
                } else {
                    JOptionPane.showMessageDialog(this, "Course Not Added");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (searchTxt.getText().trim().isEmpty() || !searchTxt.getText().matches("^[0-9]*$")) {
            JOptionPane.showMessageDialog(this, "Search not valid\nOnly Search Ids");
        } else {
            Course newCourse = new Course();
            int theId = Integer.parseInt(searchTxt.getText());
            newCourse.setId(theId);
            try {
                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                CourseService service = (CourseService) theReg.lookup("course");
                Course course = service.searchCourse(newCourse);

                if (course != null) {
                    DefaultTableModel tbModel = (DefaultTableModel) allCoursesT.getModel();
                    tbModel.setRowCount(0);

                    Integer id = course.getId();
                    String code = course.getCode();
                    String name = course.getName();
                    String credits = course.getCredit();
                    String teacher = course.getTheTeacher().getNames();

                    tbModel.addRow(new Object[]{
                        id, code, name, credits, teacher
                    });
                } else {
                    JOptionPane.showMessageDialog(this, "No Results");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            allCoursesT.print();

        } catch (PrinterException ex) {
            Logger.getLogger(StudentView.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void allCoursesTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allCoursesTMouseClicked
        int rowSelected = allCoursesT.getSelectedRow();
        DefaultTableModel tbModel = (DefaultTableModel) allCoursesT.getModel();
        names.setText(tbModel.getValueAt(rowSelected, 1).toString());
        code.setText(tbModel.getValueAt(rowSelected, 2).toString());
        teachert.setSelectedItem(tbModel.getValueAt(rowSelected, 5).toString());
        credit.setText(tbModel.getValueAt(rowSelected, 3).toString());
    }//GEN-LAST:event_allCoursesTMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CourseView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CourseView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CourseView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CourseView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GradesBtn1;
    private javax.swing.JTable allCoursesT;
    private javax.swing.JTextField code;
    private javax.swing.JButton courseBtn1;
    private javax.swing.JTextField credit;
    private javax.swing.JButton delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField names;
    private javax.swing.JButton save;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JButton studentBtn1;
    private javax.swing.JButton teacherBtn1;
    private javax.swing.JComboBox<String> teachert;
    // End of variables declaration//GEN-END:variables
}
