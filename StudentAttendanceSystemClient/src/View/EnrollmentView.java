/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Classs;
import Model.Student;
import Model.Studies;
import Services.ClasssServices;
import Services.StudentServices;
import Services.StudiesServices;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ZIPTECH LTD
 */
public class EnrollmentView extends javax.swing.JInternalFrame {

    /**
     * Creates new form EnrollmentView
     */
    public EnrollmentView() {
        initComponents();
        studentName.enable(false);
        className.enable(false);
        allRetrived();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchStudentId = new javax.swing.JTextField();
        studentName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        searchClassId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        allEnrollements = new javax.swing.JTable();
        searchTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        searchStudent = new javax.swing.JButton();
        className = new javax.swing.JTextField();
        searchClass = new javax.swing.JButton();
        searchType = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel1.setText("Enrollement");

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel2.setText("Searches");

        searchStudentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchStudentIdActionPerformed(evt);
            }
        });

        studentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentNameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel3.setText("Student Id:");

        searchClassId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClassIdActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel4.setText("Names:");

        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel5.setText("Class Name:");

        jLabel6.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel6.setText("Class Id:");

        save.setText("Enroll");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        delete.setText("Remove");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        allEnrollements.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "StudentID", "Names", "ClassId", "Class", "ClassDay", "Teacher"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allEnrollements.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allEnrollementsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(allEnrollements);
        if (allEnrollements.getColumnModel().getColumnCount() > 0) {
            allEnrollements.getColumnModel().getColumn(0).setPreferredWidth(5);
            allEnrollements.getColumnModel().getColumn(6).setResizable(false);
        }

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icons/icons8-search-24.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        searchStudent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icons/icons8-search-24.png"))); // NOI18N
        searchStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchStudentActionPerformed(evt);
            }
        });

        className.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classNameActionPerformed(evt);
            }
        });

        searchClass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icons/icons8-search-24.png"))); // NOI18N
        searchClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClassActionPerformed(evt);
            }
        });

        searchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student-Id", "Class-id" }));

        jLabel7.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel7.setText("Search Type:");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icons/icons8-print-24.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(save, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(searchStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(29, 29, 29)
                                                .addComponent(searchStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(studentName, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(className, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(searchClassId, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(searchClass, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(63, 63, 63)
                                        .addComponent(delete)))
                                .addGap(0, 39, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(417, 417, 417)
                                .addComponent(jLabel7))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchType, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(searchStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(searchStudent))
                        .addGap(18, 18, 18)
                        .addComponent(studentName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(searchClassId, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(searchClass))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(className, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(delete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchTxt)
                    .addComponent(jLabel7)
                    .addComponent(searchType))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(19, 19, 19))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void allRetrived() {
        DefaultTableModel tbModel = (DefaultTableModel) allEnrollements.getModel();
        try {
            Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
            StudiesServices service = (StudiesServices) theReg.lookup("studies");
            List<Studies> allStudies = service.allStudiess();
            tbModel.setRowCount(0);
            for (Studies study : allStudies) {
                Integer id = study.getId();
                Integer stId = study.getTheStudent().getStudentId();
                String stNames = study.getTheStudent().getNames();
                Integer clId = study.getTheClass().getClassId();
                String clName = study.getTheClass().getName();
                String clDay = study.getTheClass().getDay();
                String clTeacher = study.getTheClass().getTheTeacher().getNames();
                tbModel.addRow(new Object[]{
                    id, stId, stNames, clId, clName, clDay, clTeacher});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void searchStudentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchStudentIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchStudentIdActionPerformed

    private void studentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentNameActionPerformed

    private void searchClassIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClassIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchClassIdActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if (searchStudentId.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Search Student First");
        } else if (searchClassId.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Search Class");
        } else {
            try {
                Studies stud = new Studies();

                Student st = new Student();
                st.setStudentId(Integer.parseInt(searchStudentId.getText()));

                Classs cl = new Classs();
                cl.setClassId(Integer.parseInt(searchClassId.getText()));

                stud.setTheClass(cl);
                stud.setTheStudent(st);

                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                StudiesServices service = (StudiesServices) theReg.lookup("studies");
                Studies studObj = service.saveStudies(stud);

                if (studObj != null) {
                    JOptionPane.showMessageDialog(this, "Enllored Successfuly");
                    searchStudentId.setText("");
                    studentName.setText("");
                    searchClassId.setText("");
                    className.setText("");
                    allRetrived();
                } else {
                    JOptionPane.showMessageDialog(this, "Something wrong");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if (allEnrollements.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Select a row To delete");
        } else {
            int choice = JOptionPane.showConfirmDialog(this, "Are you sure to delete");
            if (choice == JOptionPane.YES_OPTION) {
                int selectedRow = allEnrollements.getSelectedRow();
                DefaultTableModel tbModel = (DefaultTableModel) allEnrollements.getModel();
                Studies stud = new Studies();
                stud.setId(Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString()));
                try {
                    Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                    StudiesServices service = (StudiesServices) theReg.lookup("studies");
                    Studies studObj = service.delete(stud);

                    if (studObj != null) {
                        JOptionPane.showMessageDialog(this, "Student Removed from class");
                        searchStudentId.setText("");
                        studentName.setText("");
                        searchClassId.setText("");
                        className.setText("");
                        allRetrived();
                        allRetrived();
                    } else {
                        JOptionPane.showMessageDialog(this, "Something wrong");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void allEnrollementsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allEnrollementsMouseClicked
        int selectedRow = allEnrollements.getSelectedRow();
        DefaultTableModel tbModel = (DefaultTableModel) allEnrollements.getModel();

        searchStudentId.setText(tbModel.getValueAt(selectedRow, 1).toString());
        studentName.setText(tbModel.getValueAt(selectedRow, 2).toString());
        searchClassId.setText(tbModel.getValueAt(selectedRow, 3).toString());
        className.setText(tbModel.getValueAt(selectedRow, 4).toString());
    }//GEN-LAST:event_allEnrollementsMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (searchTxt.getText().trim().isEmpty() || !searchTxt.getText().matches("^[0-9]*$")) {
            JOptionPane.showMessageDialog(this, "Search not valid\nOnly Search Ids");
        } else {
            try {
                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                StudiesServices service = (StudiesServices) theReg.lookup("studies");

                Studies stud = new Studies();
                int theId = Integer.parseInt(searchTxt.getText());
                List<Studies> studObj = null;

                if (searchType.getSelectedIndex() == 0) {
                    Student st = new Student();
                    st.setStudentId(theId);
                    stud.setTheStudent(st);
                    studObj = service.searchStudiesStudent(stud);

                } else if (searchType.getSelectedIndex() == 1) {
                    Classs cl = new Classs();
                    cl.setClassId(theId);
                    stud.setTheClass(cl);
                    studObj = service.searchStudiesClass(stud);
                }

                if (studObj.size() != 0) {
                    DefaultTableModel tbModel = (DefaultTableModel) allEnrollements.getModel();
                    tbModel.setRowCount(0);

                    for (Studies study : studObj) {
                        Integer id = study.getId();
                        Integer stId = study.getTheStudent().getStudentId();
                        String stNames = study.getTheStudent().getNames();
                        Integer clId = study.getTheClass().getClassId();
                        String clName = study.getTheClass().getName();
                        String clDay = study.getTheClass().getDay();
                        String clTeacher = study.getTheClass().getTheTeacher().getNames();
                        tbModel.addRow(new Object[]{
                            id, stId, stNames, clId, clName, clDay, clTeacher});
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No Results");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void searchStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchStudentActionPerformed
        if (searchStudentId.getText().trim().isEmpty() || !searchTxt.getText().matches("^[0-9]*$")) {
            JOptionPane.showMessageDialog(this, "fill Student search\n Search by Id");
        } else {
            try {
                Integer theId = Integer.parseInt(searchStudentId.getText());
                Student stud = new Student();
                stud.setStudentId(theId);

                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                StudentServices service = (StudentServices) theReg.lookup("student");
                Student theStudent = service.searchStudent(stud);

                if (theStudent != null) {
                    studentName.setText(theStudent.getNames());
                } else {
                    JOptionPane.showMessageDialog(this, "Student Does not Exist");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_searchStudentActionPerformed

    private void classNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classNameActionPerformed

    private void searchClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClassActionPerformed
        if (searchClassId.getText().trim().isEmpty() || !searchClassId.getText().matches("^[0-9]*$")) {
            JOptionPane.showMessageDialog(this, "Enter Class Id\n Search by Id");
        } else {
            Classs cl = new Classs();
            int theId = Integer.parseInt(searchClassId.getText());
            cl.setClassId(theId);
            try {
                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                ClasssServices service = (ClasssServices) theReg.lookup("classs");
                Classs classObj = service.searchClasss(cl);

                if (classObj != null) {
                    className.setText(classObj.getName());
                } else {
                    JOptionPane.showMessageDialog(this, "No Results");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_searchClassActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            allEnrollements.print();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allEnrollements;
    private javax.swing.JTextField className;
    private javax.swing.JButton delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton save;
    private javax.swing.JButton searchClass;
    private javax.swing.JTextField searchClassId;
    private javax.swing.JButton searchStudent;
    private javax.swing.JTextField searchStudentId;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JComboBox<String> searchType;
    private javax.swing.JTextField studentName;
    // End of variables declaration//GEN-END:variables
}
