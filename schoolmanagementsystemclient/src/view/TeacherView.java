/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Model.Teacher;
import java.awt.print.PrinterException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import service.TeacherService;

/**
 *
 * @author LOGAN
 */
public class TeacherView extends javax.swing.JFrame {

    /**
     * Creates new form Teacherview
     */
    public TeacherView() {
        initComponents();
        allRetrived();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gender = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        teacherBtn = new javax.swing.JButton();
        studentBtn = new javax.swing.JButton();
        courseBtn = new javax.swing.JButton();
        GradesBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        names = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        save = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        allTeachers = new javax.swing.JTable();
        searchTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        teacherBtn.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        teacherBtn.setText("Teacher");
        teacherBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherBtnActionPerformed(evt);
            }
        });

        studentBtn.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        studentBtn.setText("Student");
        studentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentBtnActionPerformed(evt);
            }
        });

        courseBtn.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        courseBtn.setText("Courses");
        courseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseBtnActionPerformed(evt);
            }
        });

        GradesBtn.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        GradesBtn.setText("Grades");
        GradesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GradesBtnActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("School Management system");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addComponent(teacherBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(studentBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(courseBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(GradesBtn)
                .addContainerGap(469, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(329, 329, 329)
                    .addComponent(jLabel8)
                    .addContainerGap(378, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teacherBtn)
                    .addComponent(studentBtn)
                    .addComponent(courseBtn)
                    .addComponent(GradesBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel8)
                    .addContainerGap(41, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        names.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namesActionPerformed(evt);
            }
        });
        getContentPane().add(names, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 176, 29));

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel2.setText("Names:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        getContentPane().add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 176, 29));

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel3.setText("E-mail");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel4.setText("Phone");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });
        getContentPane().add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, 176, 29));

        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel5.setText("Faculty:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "Information Technology", "Education", "Business Management" }));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 360, 176, 30));

        jLabel6.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel6.setText("Gender");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, -1, -1));

        gender.add(male);
        male.setText("Male");
        getContentPane().add(male, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, -1, -1));

        gender.add(female);
        female.setText("Female");
        getContentPane().add(female, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel7.setText("Password:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, -1, -1));
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 450, 176, 30));

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, -1, -1));

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 530, -1, -1));

        allTeachers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Names", "E-mail", "Phone", "Faculty", "Gender", "***"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allTeachers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allTeachersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(allTeachers);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 150, 694, -1));

        searchTxt.setFont(new java.awt.Font("Bell MT", 1, 12)); // NOI18N
        getContentPane().add(searchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 110, 154, 30));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/icons8-search-24.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 110, 30, 30));

        jLabel1.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        jLabel1.setText("Add Teacher");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 360, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/icons8-print-24.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 530, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
void allRetrived() {
        DefaultTableModel tbModel = (DefaultTableModel) allTeachers.getModel();
        try {
            Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
            TeacherService service = (TeacherService) theReg.lookup("teacher");
            List<Teacher> allTeachers = service.allTeacher();
            tbModel.setRowCount(0);
            for (Teacher teacher : allTeachers) {
                Integer id = teacher.getTeacherId();
                String names = teacher.getNames();
                String email = teacher.getEmail();
                String phone = teacher.getPhone();
                String faculty = teacher.getFaculty();
                String gender = teacher.getGender();
                String password = teacher.getPassword();
                tbModel.addRow(new Object[]{
                    id, names, email, phone, faculty, gender, password});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void teacherBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherBtnActionPerformed
        TeacherView teacher = new TeacherView();
        teacher.show();

        dispose();
    }//GEN-LAST:event_teacherBtnActionPerformed

    private void studentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentBtnActionPerformed
        StudentView student = new StudentView();
        student.show();

        dispose();
    }//GEN-LAST:event_studentBtnActionPerformed

    private void courseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseBtnActionPerformed
        CourseView course = new CourseView();
        course.show();

        dispose();
    }//GEN-LAST:event_courseBtnActionPerformed

    private void GradesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GradesBtnActionPerformed
        GradeView grade = new GradeView();
        grade.show();

        dispose();
    }//GEN-LAST:event_GradesBtnActionPerformed

    private void namesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namesActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if (names.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Names can not be Empty");
        } else if (!isValidEmail(email.getText())) {
            JOptionPane.showMessageDialog(this, "Email not Valid");
        } else if (!phone.getText().matches("^07\\d{8}$")) {
            JOptionPane.showMessageDialog(this, "Phone number not Valid");
        } else if (jComboBox1.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Select Faculty");
        } else if (gender.getSelection() == null) {
            JOptionPane.showMessageDialog(this, "Select Gender");
        } else if (password.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Create Password for New Teacher");
        } else {
            try {
                Teacher teach = new Teacher();

                if (allTeachers.getSelectedRow() != -1) {
                    int selectedRow = allTeachers.getSelectedRow();
                    DefaultTableModel tbModel = (DefaultTableModel) allTeachers.getModel();
                    teach.setTeacherId(Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString()));
                }
                teach.setNames(names.getText());
                teach.setEmail(email.getText());
                teach.setPhone(phone.getText());
                teach.setFaculty(jComboBox1.getSelectedItem().toString());
                teach.setGender(gender.getSelection().toString());
                if (male.isSelected()) {
                    teach.setGender(male.getText());
                } else {
                    teach.setGender(female.getText());
                }
                teach.setPassword(password.getText());

                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                TeacherService service = (TeacherService) theReg.lookup("teacher");
                Teacher teacherObj = service.creatTeacher(teach);

                if (teacherObj != null) {
                    JOptionPane.showMessageDialog(this, "Data saved");
                    names.setText("");
                    email.setText("");
                    phone.setText("");
                    jComboBox1.setSelectedIndex(0);
                    gender.clearSelection();
                    password.setText("");
                    allRetrived();
                } else {
                    JOptionPane.showMessageDialog(this, "Something wrong");
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if (allTeachers.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Select a row To delete");
        } else {
            int choice = JOptionPane.showConfirmDialog(this, "Are you sure to delete");
            if (choice == JOptionPane.YES_OPTION) {
                int selectedRow = allTeachers.getSelectedRow();
                DefaultTableModel tbModel = (DefaultTableModel) allTeachers.getModel();
                Teacher teach = new Teacher();
                teach.setTeacherId(Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString()));
                try {
                    Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                    TeacherService service = (TeacherService) theReg.lookup("teacher");
                    Teacher teacherObj = service.deleteTeacher(teach);

                    if (teacherObj != null) {
                        JOptionPane.showMessageDialog(this, "Data saved");
                        names.setText("");
                        email.setText("");
                        phone.setText("");
                        jComboBox1.setSelectedIndex(0);
                        gender.clearSelection();
                        password.setText("");
                        allRetrived();
                    } else {
                        JOptionPane.showMessageDialog(this, "Something wrong");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void allTeachersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allTeachersMouseClicked
        int selectedRow = allTeachers.getSelectedRow();
        DefaultTableModel tbModel = (DefaultTableModel) allTeachers.getModel();

        names.setText(tbModel.getValueAt(selectedRow, 1).toString());
        email.setText(tbModel.getValueAt(selectedRow, 2).toString());
        phone.setText(tbModel.getValueAt(selectedRow, 3).toString());
        jComboBox1.setSelectedItem(tbModel.getValueAt(selectedRow, 4).toString());
        if (tbModel.getValueAt(selectedRow, 4).toString().equals("Male")) {
            male.setSelected(true);
        } else {
            female.setSelected(true);
        }
        password.setText(tbModel.getValueAt(selectedRow, 6).toString());
    }//GEN-LAST:event_allTeachersMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (searchTxt.getText().trim().isEmpty() || !searchTxt.getText().matches("^[0-9]*$")) {
            JOptionPane.showMessageDialog(this, "Search not valid\nOnly Search Ids");
        } else {
            Teacher teach = new Teacher();
            int theId = Integer.parseInt(searchTxt.getText());
            teach.setTeacherId(theId);
            try {
                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                TeacherService service = (TeacherService) theReg.lookup("teacher");
                Teacher teacherObj = service.searchTeacher(teach);

                if (teacherObj != null) {
                    DefaultTableModel tbModel = (DefaultTableModel) allTeachers.getModel();
                    tbModel.setRowCount(0);

                    Integer id = teacherObj.getTeacherId();
                    String names = teacherObj.getNames();
                    String email = teacherObj.getEmail();
                    String phone = teacherObj.getPhone();
                    String faculty = teacherObj.getFaculty();
                    String gender = teacherObj.getGender();
                    String password = teacherObj.getPassword();
                    tbModel.addRow(new Object[]{
                        id, names, email, phone, faculty, gender, password});
                } else {
                    JOptionPane.showMessageDialog(this, "No Results");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            allTeachers.print();
        } catch (PrinterException ex) {
            Logger.getLogger(StudentView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public static boolean isValidEmail(String email) {
        String regex = "^[\\w!#$%&'*+/=?^`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?$";
        return Pattern.matches(regex, email);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GradesBtn;
    private javax.swing.JTable allTeachers;
    private javax.swing.JButton courseBtn;
    private javax.swing.JButton delete;
    private javax.swing.JTextField email;
    private javax.swing.JRadioButton female;
    private javax.swing.ButtonGroup gender;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField names;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField phone;
    private javax.swing.JButton save;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JButton studentBtn;
    private javax.swing.JButton teacherBtn;
    // End of variables declaration//GEN-END:variables
}
