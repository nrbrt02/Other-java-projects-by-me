/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Classs;
import Model.Teacher;
import Services.ClasssServices;
import Services.TeacherServices;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ZIPTECH LTD
 */
public class ClassessView extends javax.swing.JInternalFrame {

    /**
     * Creates new form ClassessView
     */
    public ClassessView() {
        initComponents();
        allRetrived();
        fillTeacher();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        room = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        allClasses = new javax.swing.JTable();
        searchTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        day = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        teacherComb = new javax.swing.JComboBox<>();
        credits = new javax.swing.JSpinner();
        time = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel1.setText("Class");

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel2.setText("Names:");

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        room.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel3.setText("No Credits:");

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel4.setText("Day:");

        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel5.setText("Room:");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        allClasses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Name", "Credits", "Day", "Time", "Room", "Teacher", "Teacher_id", "Enrolled"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allClasses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allClassesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(allClasses);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icons/icons8-search-24.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel8.setText("Time:");

        day.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Sunday" }));

        jLabel9.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel9.setText("Teacher:");

        teacherComb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--" }));
        teacherComb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherCombActionPerformed(evt);
            }
        });

        time.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "08:30", "11:30", "14:30", "18:00" }));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icons/icons8-print-24.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(362, 362, 362)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(credits))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(save)
                                .addGap(18, 18, 18)
                                .addComponent(delete))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel9))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(day, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(room)
                                    .addComponent(teacherComb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(time, 0, 176, Short.MAX_VALUE)))
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(credits)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(jLabel5)
                        .addGap(19, 19, 19))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(room, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(teacherComb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(delete))
                .addGap(29, 29, 29)
                .addComponent(jButton2)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchTxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
void fillTeacher() {
        try {
            Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
            TeacherServices service = (TeacherServices) theReg.lookup("teacher");
            List<Teacher> allTeachers = service.allTeachers();
            for (Teacher teacher : allTeachers) {
                teacherComb.addItem(teacher.getTeacherId().toString());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void allRetrived() {
        DefaultTableModel tbModel = (DefaultTableModel) allClasses.getModel();
        try {
            Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
            ClasssServices service = (ClasssServices) theReg.lookup("classs");
            List<Classs> allClasses = service.allClassss();
            tbModel.setRowCount(0);
            for (Classs classObj : allClasses) {
                Integer id = classObj.getClassId();
                String names = classObj.getName();
                String credits = classObj.getCreadits();
                String day = classObj.getDay();
                String time = classObj.getTime();
                String room = classObj.getRoom();
                String teacher = classObj.getTheTeacher().getNames();
                Integer teacher_id = classObj.getTheTeacher().getTeacherId();
                Integer enrolled = classObj.getEnrolled();
                tbModel.addRow(new Object[]{
                    id, names, credits, day, time, room, teacher, teacher_id, enrolled});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void roomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if (name.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Name can not be Empty");
        } else if (Integer.parseInt(credits.getValue().toString()) < 0) {
            JOptionPane.showMessageDialog(this, "Number of Credit can't be Empty");
        } else if (day.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Select a class Day");
        } else if (time.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Select Class Time");
        } else if (room.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Add Room");
        } else if (teacherComb.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Select Teacher");
        } else {
            try {
                Classs cl = new Classs();

                if (allClasses.getSelectedRow() != -1) {
                    int selectedRow = allClasses.getSelectedRow();
                    DefaultTableModel tbModel = (DefaultTableModel) allClasses.getModel();
                    cl.setClassId(Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString()));
                }
                cl.setName(name.getText());
                cl.setCreadits(credits.getValue().toString());
                cl.setDay(day.getSelectedItem().toString());
                cl.setTime(time.getSelectedItem().toString());
                cl.setRoom(room.getText());
                cl.setEnrolled(0);

                Teacher te = new Teacher();
                te.setTeacherId(Integer.parseInt(teacherComb.getSelectedItem().toString()));
                cl.setTheTeacher(te);

                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                ClasssServices service = (ClasssServices) theReg.lookup("classs");
                Classs classObj = service.saveClasss(cl);

                if (classObj != null) {
                    JOptionPane.showMessageDialog(this, "Data saved");
                    name.setText("");
                    room.setText("");
                    credits.setValue(0);
                    day.setSelectedIndex(0);
                    time.setSelectedIndex(0);
                    teacherComb.setSelectedIndex(0);
                    allRetrived();
                } else {
                    JOptionPane.showMessageDialog(this, "Something wrong");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if (allClasses.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Select a row To delete");
        } else {
            int choice = JOptionPane.showConfirmDialog(this, "Are you sure to delete");
            if (choice == JOptionPane.YES_OPTION) {
                int selectedRow = allClasses.getSelectedRow();
                DefaultTableModel tbModel = (DefaultTableModel) allClasses.getModel();
                Classs cl = new Classs();
                cl.setClassId(Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString()));
                try {
                    Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                    ClasssServices service = (ClasssServices) theReg.lookup("classs");
                    Classs classObj = service.deleteClasss(cl);

                    if (classObj != null) {
                        JOptionPane.showMessageDialog(this, "Data saved");
                        name.setText("");
                        room.setText("");
                        credits.setValue(0);
                        day.setSelectedIndex(0);
                        time.setSelectedIndex(0);
                        teacherComb.setSelectedIndex(0);
                        allRetrived();
                    } else {
                        JOptionPane.showMessageDialog(this, "Something wrong");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void allClassesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allClassesMouseClicked
        int selectedRow = allClasses.getSelectedRow();
        DefaultTableModel tbModel = (DefaultTableModel) allClasses.getModel();

        name.setText(tbModel.getValueAt(selectedRow, 1).toString());
        room.setText(tbModel.getValueAt(selectedRow, 5).toString());
        credits.setValue(Integer.parseInt(tbModel.getValueAt(selectedRow, 2).toString()));
        day.setSelectedItem(tbModel.getValueAt(selectedRow, 3).toString());
        time.setSelectedItem(tbModel.getValueAt(selectedRow, 4).toString());
        teacherComb.setSelectedItem(tbModel.getValueAt(selectedRow, 7).toString());
    }//GEN-LAST:event_allClassesMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (searchTxt.getText().trim().isEmpty() || !searchTxt.getText().matches("^[0-9]*$")) {
            JOptionPane.showMessageDialog(this, "Search not valid\nOnly Search Ids");
        } else {
            Classs cl = new Classs();
            int theId = Integer.parseInt(searchTxt.getText());
            cl.setClassId(theId);
            try {
                Registry theReg = LocateRegistry.getRegistry("127.0.0.1", 81);
                ClasssServices service = (ClasssServices) theReg.lookup("classs");
                Classs classObj = service.searchClasss(cl);

                if (classObj != null) {
                    DefaultTableModel tbModel = (DefaultTableModel) allClasses.getModel();
                    tbModel.setRowCount(0);

                    Integer id = classObj.getClassId();
                    String names = classObj.getName();
                    String credits = classObj.getCreadits();
                    String day = classObj.getDay();
                    String time = classObj.getTime();
                    String room = classObj.getRoom();
                    Integer enrolled = classObj.getEnrolled();
                    tbModel.addRow(new Object[]{
                        id, names, credits, day, time, room, enrolled});
                } else {
                    JOptionPane.showMessageDialog(this, "No Results");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void teacherCombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherCombActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teacherCombActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            allClasses.print();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allClasses;
    private javax.swing.JSpinner credits;
    private javax.swing.JComboBox<String> day;
    private javax.swing.JButton delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField room;
    private javax.swing.JButton save;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JComboBox<String> teacherComb;
    private javax.swing.JComboBox<String> time;
    // End of variables declaration//GEN-END:variables
}
